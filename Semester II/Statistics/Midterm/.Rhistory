conf_interval
non_vegetarian_prop <- mean(data$vegetarian != "y")
total_students <- nrow(data)
non_vegetarian_count <- sum(data$vegetarian != "y")
conf_interval <- prop.test(non_vegetarian_count, total_students)$conf.int
conf_interval
# Task 1
# Calculate the number of students who are not vegetarian
not_vegetarian_count <- sum(data$vegetarian != 'y')
# Task 1
# Calculate the number of students who are not vegetarian
not_vegetarian_count <- sum(data$vegetarian != 'y')
non_vegetarian_count <- sum(data$vegetarian != "y")
# Task 1
non_vegetarian_count <- sum(data$vegetarian != "y")
non_vegetarian_count <- count(data$vegetarian != "y")
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
# Task 1
non_vegetarian_count <- size(data$vegetarian != "y")
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
# Task 1
non_vegetarian_count <- sum(data$vegetarian != "y")
total_students <- nrow(data)
# Proportion of non-vegetarian students
p <- non_vegetarian_count / total_students
# Calculate the confidence interval
conf_interval <- prop.test(x = non_vegetarian_count, n = total_students, conf.level = 0.95)$conf.int
# Output the results
print(conf_interval)
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
# Task 1
not_vegetarian <- subset(data, vegetarian != 'y')
sample_proportion <- nrow(not_vegetarian) / nrow(data)
# Step 2: Calculate the standard error of the proportion
population_sd <- sqrt(sample_proportion * (1 - sample_proportion))
sample_size <- nrow(data)
standard_error <- population_sd / sqrt(sample_size)
# Step 3: Use the z-score for 95% confidence level
confidence_level <- 0.95
z_score <- qnorm(1 - (1 - confidence_level) / 2)
# Step 4: Compute the margin of error and confidence interval bounds
margin_of_error <- z_score * standard_error
lower_bound <- sample_proportion - margin_of_error
upper_bound <- sample_proportion + margin_of_error
# Output the results
cat("95% Confidence Interval for the proportion of non-vegetarian students: (", lower_bound, ",", upper_bound, ")\n")
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
# Task 1
not_vegetarian <- subset(data, vegetarian != 'y')
sample_proportion <- nrow(not_vegetarian) / nrow(data)
# Step 2: Calculate the standard error of the proportion
population_sd <- sqrt(sample_proportion * (1 - sample_proportion))
sample_size <- nrow(data)
standard_error <- population_sd / sqrt(sample_size)
# Step 3: Use the z-score for 95% confidence level
confidence_level <- 0.95
z_score <- qnorm(1 - (1 - confidence_level) / 2)
# Step 4: Compute the margin of error and confidence interval bounds
margin_of_error <- z_score * standard_error
lower_bound <- sample_proportion - margin_of_error
upper_bound <- sample_proportion + margin_of_error
# Output the results
cat("95% Confidence Interval for the proportion of non-vegetarian students: (", lower_bound, ",", upper_bound, ")\n")
upper_bound - lower_bound
View(data)
View(data)
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
population_sd <- sqrt(sample_proportion * (1 - sample_proportion))
sample_size <- nrow(data)
standard_error <- population_sd / sqrt(sample_size)
confidence_level <- 0.70
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_proportion - margin_of_error
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
population_sd <- sqrt(sample_proportion * (1 - sample_proportion))
sample_size <- nrow(data)
standard_error <- population_sd / sqrt(sample_size)
confidence_level <- 0.70
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_proportion - margin_of_error
lower_bound
View(data)
View(data)
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_mean <- mean(male_r_students$GPA)
sample_sd <- sd(male_r_students$GPA)
sample_size <- nrow(male_r_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
# Output the results
cat("99% Confidence Interval : (", lower_bound, ",", upper_bound, ")\n")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
male_r_students
# Task 3
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_mean <- mean(male_r_students$GPA)
sample_sd <- sd(male_r_students$GPA)
sample_size <- nrow(male_r_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
# Output the results
cat("99% Confidence Interval : (", lower_bound, ",", upper_bound, ")\n")
z_score
samle_mean
sample_mean
upper_bound - lower_bound
# Task 2
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_mean <- mean(male_r_students$college_GPA)
sample_sd <- sd(male_r_students$college_GPA)
sample_size <- nrow(male_r_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
# Output the results
cat("99% Confidence Interval : (", lower_bound, ",", upper_bound, ")\n")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
# Calculate sample mean and standard deviation of college GPA
sample_mean <- mean(male_r_students$college_GPA)
sample_sd <- sd(male_r_students$college_GPA)
# Calculate sample size and standard error
sample_size <- nrow(male_r_students)
standard_error <- sample_sd / sqrt(sample_size)
# Set confidence level and calculate z-score
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
# Calculate margin of error
margin_of_error <- z_score * standard_error
# Calculate lower and upper bounds of the confidence interval
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
# Output the results
cat("99% Confidence Interval for the mean GPA of male republican students: [", lower_bound, ",", upper_bound, "]\n")
non_ideology_1_students <- subset(data, political_ideology != 1)
sample_mean <- mean(non_ideology_1_students$AIDS)
sample_sd <- sd(non_ideology_1_students$AIDS)
sample_size <- nrow(non_ideology_1_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
# Output the results
cat("[", lower_bound, ",", upper_bound, "]\n")
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
# Task 4
non_ideology_1_students <- subset(data, political_ideology != 1)
sample_mean <- mean(non_ideology_1_students$AIDS)
sample_sd <- sd(non_ideology_1_students$AIDS)
sample_size <- nrow(non_ideology_1_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
# Output the results
cat("[", lower_bound, ",", upper_bound, "]\n")
margin_of_error <- 0.01  # Given margin of error
standard_deviation <- 0.1  # Assumed standard deviation
confidence_level <- 1 - (margin_of_error / standard_deviation)
cat("The confidence level of the interval is:", round(confidence_level * 100, 2), "%")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
margin_of_error <- 0.01
standard_deviation <- sd(male_r_students$college_GPA)
confidence_level <- 1 - (margin_of_error / standard_deviation)
cat("The confidence level of the interval is:", round(confidence_level * 100, 2), "%")
gpa_std_dev <- sd(data$collage_GPA)
# Margin of error
margin_of_error <- 0.01
# Sample size (number of male Republican students)
# You need to replace 'political_affiliation' and 'gender' with actual column names in your dataset
# Also, replace 'r' and 'm' with the actual values representing Republican and male respectively
sample_size <- nrow(data[data$political_affiliation == 'r' & data$gender == 'm', ])
# Calculate the confidence level percent
# We assume a large enough sample size to use the standard normal distribution
confidence_level <- 100 * (1 - margin_of_error / (gpa_std_dev / sqrt(sample_size)))
# Print the result
cat("The confidence level percent is:", confidence_level, "%\n")
sample_mean <- mean(data$collage_GPA)
population_sd <- sd(data$collage_GPA)
# Define the lower and upper bounds of the confidence interval
lower_bound <- 24.43
upper_bound <- 25.57
# Define the sample size
sample_size <- nrow(data)
# Calculate the z-scores for the lower and upper bounds
z_lower <- (lower_bound - sample_mean) / (population_sd / sqrt(sample_size))
z_upper <- (upper_bound - sample_mean) / (population_sd / sqrt(sample_size))
# Calculate the percentage of the confidence interval
percent_interval <- pnorm(z_upper) - pnorm(z_lower)
percent_confidence <- percent_interval * 100
# Print the result
cat("Confidence Level = ", round(percent_confidence, 2), "%\n")
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
# Calculate sample mean and standard deviation
sample_mean <- mean(male_r_students$college_GPA)
sample_sd <- sd(male_r_students$college_GPA)
# Given margin of error
margin_of_error <- 0.01
# Calculate z-score for given margin of error
z_score <- qnorm(0.5 + (margin_of_error / 2))
# Calculate sample size
sample_size <- nrow(male_r_students)
# Calculate confidence level
confidence_level <- 2 * pnorm(z_score) - 1
# Convert confidence level to percentage
confidence_level_percent <- confidence_level * 100
# Print confidence level percentage
print(paste("The confidence level percentage is:", round(confidence_level_percent, 2), "%"))
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
# Calculate sample mean and standard deviation
sample_mean <- mean(male_r_students$college_GPA)
sample_sd <- sd(male_r_students$college_GPA)
# Given confidence level (1%)
confidence_level <- 0.01
# Calculate z-score for given confidence level
z_score <- qnorm(1 - (1 - confidence_level) / 2)
# Calculate sample size
sample_size <- nrow(male_r_students)
# Calculate margin of error
margin_of_error <- z_score * (sample_sd / sqrt(sample_size))
# Print margin of error
print(paste("The margin of error for a 1% confidence interval is:", round(margin_of_error, 4)))
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
# Calculate sample mean and sample standard deviation
sample_mean <- mean(male_r_students$college_GPA)
sample_sd <- sd(male_r_students$college_GPA)
# Given margin of error
margin_of_error <- 0.01
# Calculate the z-score for desired confidence level
# We assume a normal distribution, so we use the z-score corresponding to the desired confidence level
z_score <- qnorm(0.5 + (confidence_level / 200))
# Calculate the standard error
standard_error <- margin_of_error / z_score
# Calculate the confidence interval
lower_bound <- sample_mean - standard_error
upper_bound <- sample_mean + standard_error
# Calculate the percentage confidence interval
confidence_interval_percentage <- (1 - (2 * pnorm(-z_score))) * 100
# Output the result
cat("Percentage confidence interval:", confidence_interval_percentage, "%\n")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
# Calculate sample mean and standard deviation
sample_mean <- mean(male_r_students$college_GPA)
sample_sd <- sd(male_r_students$college_GPA)
# Given margin of error
margin_of_error <- 0.01
# Calculate the z-score corresponding to the margin of error
z_score <- qnorm(0.5 + (1 - margin_of_error) / 2)
# Calculate the confidence interval
lower_bound <- sample_mean - z_score * (sample_sd / sqrt(nrow(male_r_students)))
upper_bound <- sample_mean + z_score * (sample_sd / sqrt(nrow(male_r_students)))
# Calculate the confidence level
confidence_level <- 2 * pnorm(z_score) - 1
# Print the confidence level in percentage
confidence_level_percentage <- confidence_level * 100
cat("The confidence interval is", confidence_level_percentage, "%.")
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- (1 - pnorm(z_score)) / 2
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- (1 - pnorm(z_score)) / 2 * 100
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
# Task 6
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- (1 - pnorm(z_score)) / 2 * 100
confidance
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- pnorm(z_score) - ((1 - pnorm(z_score)) / 2)
confidance
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- pnorm(z_score) - pnorm(-z_score)
confidance * 100
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- pnorm(z_score) - pnorm(-z_score)
confidance * 100
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- pnorm(z_score) - pnorm(-z_score)
confidance * 100
# Task 7
data$political_affiliation <- factor(data$political_affiliation)
data$gender <- factor(data$gender)
# Count frequencies of each combination of political affiliation and gender
freq_table <- table(data$political_affiliation, data$gender)
# Plot the histogram
barplot(freq_table, beside=TRUE, legend.text=TRUE, col=c("blue", "pink"), main="Histogram of Political Affiliation by Gender", xlab="Political Affiliation", ylab="Frequency")
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- pnorm(z_score) - pnorm(-z_score)
confidance * 100
a = read.csv ("fl_student_survey.csv")
head(a)
vegetarian = a$vegetarian
religiosity = a$religiosity
b =table(vegetarian,religiosity)
#barplot(prop.table(b,2),col=c(5,4,3,2),
# legend.text=c('0','1','2','3'),
#args.legend=list(x="topright",cex=0.6),
#xlab = "Vegetarian", ylab = "Religiosity")
barplot(prop.table(b,2),col=c(6,7),
legend.text=c('n','y'),
args.legend=list(x="topright",cex=0.6),
xlab = "Religiosity", ylab = "Vegetarian")
gender = data$gender
political_affiliation = data$political_affiliation
b =table(vegetarian,religiosity)
barplot(
prop.table(b,2),
col=c(6,7),
legend.text=c('Male','Female'),
args.legend=list(x="topright",cex=0.6),
xlab = "Political Affiliation", ylab = "Gender"
)
gender = data$gender
political_affiliation = data$political_affiliation
b =table(gender,political_affiliation)
barplot(
prop.table(b,2),
col=c(6,7),
legend.text=c('Male','Female'),
args.legend=list(x="topright",cex=0.6),
xlab = "Political Affiliation", ylab = "Gender"
)
hist(rivers,  # Specify fixed breaks with different width
breaks = c(0, 250, 300, 400, 500, 750, 1000, 2500, 5000))
rivers
ages <- subset(data, data$high_sch_GPA > 3.5)$age
hist(ages,
breaks = seq(from = 20, to = 80, by = 10))
ages <- subset(data, data$high_sch_GPA > 3.5)$age
hist(ages,
breaks = seq(from = 20, to = 80, by = 10),
col = 'blue'
)
ages <- subset(data, data$high_sch_GPA > 3.5)$age
hist(ages,
breaks = seq(from = 20, to = 80, by = 10),
col = 'blue',
main = 'Histogram of Age',
labels = TRUE
)
data <- read.csv("fl_student_survey.csv", header=TRUE, sep=",", dec=".")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
qt(score)
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
qt(score, nrow(male_r_students) - 1)
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
confidance <- 1 - (2 * pt(abs(score), df = nrow(male_r_students) - 1))
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
confidance <- 1 - (2 * pt(abs(score), df = nrow(male_r_students) - 1))
confidance * 100
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
confidance <- 1 - (2 * pt(abs(score), df = nrow(male_r_students) - 1))
confidance * 100
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
score
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
confidance <- pt(score, df = nrow(male_r_students) - 1) - pt(-score, df = nrow(male_r_students) - 1)
confidance * 100
gender = data$gender
political_affiliation = data$political_affiliation
b =table(gender,political_affiliation)
barplot(
prop.table(b,2),
col=c(6,7),
legend.text=c('Male','Female'),
args.legend=list(x="topright",cex=0.6),
xlab = "Political Affiliation", ylab = "Gender"
)
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
margin_or_error <- 0.03
z_score = margin_or_error / sqrt((sample_proportion * (1 - sample_proportion)) / nrow(religiosity_1))
confidance <- pnorm(z_score) - pnorm(-z_score)
confidance * 100
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_sd <- sd(male_r_students$college_GPA)
margin_of_error <- 0.01
score <- margin_of_error * sqrt(nrow(male_r_students)) / (sample_sd)
confidance <- pt(score, df = nrow(male_r_students) - 1) - pt(-score, df = nrow(male_r_students) - 1)
confidance * 100
non_ideology_1_students <- subset(data, political_ideology != 1)
sample_mean <- mean(non_ideology_1_students$AIDS)
sample_sd <- sd(non_ideology_1_students$AIDS)
sample_size <- nrow(non_ideology_1_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
# Output the results
cat("[", lower_bound, ",", upper_bound, "]\n")
male_r_students <- subset(data, gender == 'm' & political_affiliation == 'r')
sample_mean <- mean(male_r_students$college_GPA)
sample_sd <- sd(male_r_students$college_GPA)
sample_size <- nrow(male_r_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
cat("[", lower_bound, ",", upper_bound, "]\n")
religiosity_1 <- subset(data, religiosity == 1)
sample_proportion <- nrow(religiosity_1) / nrow(data)
population_sd <- sqrt(sample_proportion * (1 - sample_proportion))
sample_size <- nrow(data)
standard_error <- population_sd / sqrt(sample_size)
confidence_level <- 0.70
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_proportion - margin_of_error
lower_bound
not_vegetarian <- subset(data, vegetarian != 'y')
sample_proportion <- nrow(not_vegetarian) / nrow(data)
population_sd <- sqrt(sample_proportion * (1 - sample_proportion))
sample_size <- nrow(data)
standard_error <- population_sd / sqrt(sample_size)
confidence_level <- 0.95
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_proportion - margin_of_error
upper_bound <- sample_proportion + margin_of_error
upper_bound - lower_bound
non_ideology_1_students <- subset(data, political_ideology != 1)
sample_mean <- mean(non_ideology_1_students$AIDS)
sample_sd <- sd(non_ideology_1_students$AIDS)
sample_size <- nrow(non_ideology_1_students)
standard_error <- sample_sd / sqrt(sample_size)
confidence_level <- 0.99
z_score <- qnorm(1 - (1 - confidence_level) / 2)
margin_of_error <- z_score * standard_error
lower_bound <- sample_mean - margin_of_error
upper_bound <- sample_mean + margin_of_error
cat("[", lower_bound, ",", upper_bound, "]\n")
