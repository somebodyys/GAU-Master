a <- 4
a
clear
exit
ls
clear
setwd("~/GAU Master/Semester I/R Programming/Bonus")
right <- x[x >= pivot]
# Recursive Quick-Sort function
quickSort <- function(x) {
if (length(x) <= 1) {
return(x)
}
pivot <- x[1]
x <- x[-1]
left <- x[x < pivot]
right <- x[x >= pivot]
return(
c( quickSort(left), pivot, quickSort(right) )
)
}
# Example
x <- c(5, 3, 1, 2, 4)
quickSort(x)
clear
# Recursive Quick-Sort function
quickSort <- function(array) {
if (length(array) <= 1) {
return(array)
}
pivot <- array[1]
array <- array[-1]
left <- array[array < pivot]
right <- array[array >= pivot]
return(
c( quickSort(left), pivot, quickSort(right) )
)
}
# Example
array <- c(5, 3, 1, 2, 4)
quickSort(array)
# Recursive Quick-Sort function
quickSort <- function(array) {
if (length(array) <= 1) {
return(array)
}
pivot <- array[1]
array <- array[-1]
left <- array[array < pivot]
print(left)
right <- array[array >= pivot]
return(
c( quickSort(left), pivot, quickSort(right) )
)
}
# Example
array <- c(5, 3, 1, 2, 4)
quickSort(array)
# Recursive Quick-Sort function
quickSort <- function(array) {
if (length(array) <= 1) {
return(array)
}
pivot <- array[1]
array <- array[-1]
left <- array[array < pivot]
right <- array[array >= pivot]
return(
c( quickSort(left), pivot, quickSort(right) )
)
}
# Example
array <- c(5, 3, 1, 2, 4)
quickSort(array)
